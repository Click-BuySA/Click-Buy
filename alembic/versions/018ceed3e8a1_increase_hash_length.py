"""Increase hash length

Revision ID: 018ceed3e8a1
Revises: 19c4c3a0ce70
Create Date: 2023-08-04 17:38:59.924128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '018ceed3e8a1'
down_revision: Union[str, None] = '19c4c3a0ce70'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('logins')
    op.alter_column('login', 'hash',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('login', 'user_email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint('login_user_email_key', 'login', type_='unique')
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.TEXT(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'email',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_unique_constraint('login_user_email_key', 'login', ['user_email'])
    op.alter_column('login', 'user_email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('login', 'hash',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_table('logins',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_email'], ['users.email'], name='logins_user_email_fkey'),
    sa.PrimaryKeyConstraint('id', name='logins_pkey'),
    sa.UniqueConstraint('user_email', name='logins_user_email_key')
    )
    # ### end Alembic commands ###
