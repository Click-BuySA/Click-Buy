"""initial

Revision ID: dd54e0ffc75b
Revises: 
Create Date: 2023-08-04 17:21:17.493085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dd54e0ffc75b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('login', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_constraint('login_email_key', 'login', type_='unique')
    op.create_unique_constraint(None, 'login', ['user_id'])
    op.create_foreign_key(None, 'login', 'users', ['user_id'], ['id'])
    op.drop_column('login', 'email')
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'joined',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'joined',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.add_column('login', sa.Column('email', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'login', type_='foreignkey')
    op.drop_constraint(None, 'login', type_='unique')
    op.create_unique_constraint('login_email_key', 'login', ['email'])
    op.drop_column('login', 'user_id')
    # ### end Alembic commands ###
